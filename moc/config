# This is a configuration file for the MOC player.  It should be named
# 'config' and placed in the ~/.moc directory.  As this file can specify
# commands which invoke other applications, MOC will refuse to start if it
# is not owned by either root or the current user, or if it is writable by
# anyone other than its owner.

MusicDir = /home/${USER}/Music

# Default FormatString:
#
#   %n - Track number
#   %a - Artist
#   %A - Album
#   %t - Title
#   %(X:TRUE:FALSE) - Ternary expression: if X exists, do TRUE,
#                     otherwise FALSE.  The escape character must
#                     be doubled (i.e., '\\').  (See zshmisc
#                     documentation for more information.)
#
#FormatString = "%(n:%n :)%(a:%a - :)%(t:%t:)%(A: \(%A\):)"

# Input and output buffer sizes (in kilobytes).
#InputBuffer = 512                  # Minimum value is 32KB
#OutputBuffer = 512                 # Minimum value is 128KB

# How much to fill the input buffer before playing (in kilobytes)?
# This can't be greater than the value of InputBuffer.  While this has
# a positive effect for network streams, it also causes the broadcast
# audio to be delayed.
Prebuffering = 64

# Save software mixer state?
# If enabled, a file 'softmixer' will be created in '~/.moc/' storing the
# mixersetting set when the server is shut down.
# Note that there is a "hidden" 'Amplification' setting in that file.
# Amplification (0-200) is used to scale the mixer setting (0-100).  This
# results in a higher signal amplitude but may also produce clipping.
#Softmixer_SaveState = yes

# Save equalizer state?
# If enabled, a file 'equalizer' will be created in '~/.moc/' storing the
# equalizer settings when the server is shut down.
# Note that there is a "hidden" 'Mixin' setting in that file.
# Mixin (0.0-1.0) is used to determine how much of the original signal is
# used after equalizing.  0 means to only use the equalized sound, while 1
# effectively disabled the mixer.  The default is 0.25.
Equalizer_SaveState = yes

# Show files with dot at the beginning?
ShowHiddenFiles = no

# Hide file name extensions?
HideFileExtension = yes

# Show file format in menu?
ShowFormat = yes

# Theme file to use.  This can be absolute path or relative to
# /usr/share/moc/themes/ (depends on installation prefix) or
# ~/.moc/themes/ .
#
Theme = nightly_theme

# Should MOC try to autoload the default lyrics file for an audio?  (The
# default lyrics file is a text file with the same file name as the audio
# file name with any trailing "extension" removed.)
#AutoLoadLyrics = yes

# MOC directory (where pid file, socket and state files are stored).
# You can use ~ at the beginning.
MOCDir = ~/.moc

# Use mmap() to read files.  mmap() is much slower on NFS.
#UseMMap = no

# Use MIME to identify audio files.  This can make for slower loading
# of playlists but is more accurate than using "extensions".
#UseMimeMagic = no

# Remember the playlist after exit?
SavePlaylist = yes

# When using more than one client (interface) at a time, do they share
# the playlist?
SyncPlaylist = yes

# Choose a keymap file (relative to '~/.moc/' or using an absolute path).
# An annotated example keymap file is included ('keymap.example').
#
# Example:    Keymap = my_keymap
#
Keymap = keymap

# Use ASCII rather than graphic characters for drawing lines.  This
# helps on some terminals.
ASCIILines = no

# Number items in the playlist.
PlaylistNumbering = yes

# When the song changes, should the menu be scrolled so that the currently
# played file is visible?
FollowPlayedFile = yes

# Set the terminal title when running under screen(1).  If MOC can detect
# that it is running under screen(1), then it will set an appropriate
# title (see description of ScreenTerms above).  However, if multiple
# levels of screen management are involved, detection might fail and this
# could cause a screen upset.  In that situation you can use this option
# to force screen titles off.
SetScreenTitle = yes

# Display full paths instead of just file names in the playlist.
PlaylistFullPaths = no
