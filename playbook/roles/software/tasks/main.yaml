- name: download Docker Installer
  ansible.builtin.get_url:
    url: https://get.docker.com
    dest: /tmp/docker.sh

- name: Run Docker install script
  ansible.builtin.shell:
    cmd: ls /etc/docker || cat /tmp/docker.sh | sh -s -- -y
  become: yes

- name: Reload Docker Service
  ansible.builtin.service:
    name: docker
    state: reloaded
  become: yes

- name: Install utility packages
  apt:
    state: present
    name:
      - aspell            # interactive spell checker  
      - aspell-de 
      - aspell-en
      - bat               # A cat clone with syntax highlighting and Git integration.
      - curl              # curl is a tool to transfer data from or to a server, using one of the supported protocols.
      - dnsutils          # is a flexible tool for interrogating DNS name servers. 
      - dstat             # versatile tool for generating system resource statistics
      - firefox           # browser
      - firefox-locale-de
      - firefox-locale-en
      - git               # fast, scalable, distributed revision control system
      - gnupg             # GNU Privacy Guard
      - htop              # interactively monitor the systemâ€™s vital resources.
      - iotop             # iotop watches I/O usage information output by the Linux kernel  
      - jq                # jq is a lightweight and flexible command-line JSON processor.
      - lolcat            # color output
      - neofetch          # Shows Linux System Information with Distribution Logo
      - net-tools         # collection of base networking utilities for Linux.
      - nextcloud-desktop # Connect to your Nextcloud from Windows, macOS or Linux.
      - nfs-common        # nsf tools
      - nmap              # network scanner
      - nodejs            # V8 javascript runtime 
      - pwgen             # Automatic Password generation
      - python-setuptools # 
      - python3-pip       # package installer for Python.
      - rdesktop          # RDP client for Windows Terminal Server 
      - shellcheck        # lint tool for shell scripts
      - snapd             #   
      - software-properties-common
      - sqlite3           # sqlite3 client 
      - sysstat           # system performance tools for Linux
      - terminator        # terminal
      - tig               # ncurses-based text-mode interface for Git
      - tree              # recursively list or display the content of a directory in a tree-like format.
      - zsh               # nice shell
      - silversearcher-ag # A code searching tool 
      - ripgrep           # ripgrep is a line-oriented search tool that recursively searches the current directory for a regex pattern.
  become: yes

- name: Install checkssl
  ansible.builtin.get_url:
    url: https://github.com/szazeski/checkssl/releases/download/v0.4.3/checkssl_0.4.3_Linux_x86_64.tar.gz
    dest: /usr/bin/checkssl
  become: yes

- name: make checkssl executable
  ansible.builtin.file:
    path: /usr/bin/checkssl
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install AWS CLI
  pip:
    name: awscli

- name: add google ppa
  ansible.builtin.shell:
    cmd: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 

- name: add google source list
  ansible.builtin.shell:
    cmd: echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list

- name: Install google-chrome-stable
  apt:
    state: present
    name: google-chrome-stable
    update_cache: yes
  become: yes

- name: Install skaffold
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
    dest: /usr/local/bin/skaffold
  become: yes

- name: make skaffold executable
  ansible.builtin.file:
    path: /usr/local/bin/skaffold
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install kubens
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
    dest: /usr/local/bin/kubens
  become: yes

- name: make kubens executable
  ansible.builtin.file:
    path: /usr/local/bin/kubens
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install kubeval
  ansible.builtin.get_url:
    url: https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
    dest: /tmp/kubeval-linux-amd64.tar.gz

- name: Extract /tmp/kubeval-linux-amd64.tar.gz
  ansible.builtin.unarchive:
    src: /tmp/kubeval-linux-amd64.tar.gz
    dest: /tmp

- name: Copy kubeval binary
  ansible.builtin.copy:
    src: /tmp/kubeval
    dest: /usr/local/bin/kubeval
    mode: '0555'
  become: yes

- name: Install Minikube
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
  become: yes

- name: make Minikube executable
  ansible.builtin.file:
    path: /usr/local/bin/minikube
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install kubectl
  ansible.builtin.get_url:
    url: https://dl.k8s.io/release/v1.22.7/bin/linux/amd64/kubectl
    dest: /usr/local/bin/kubectl
  become: yes

- name: make kubectl executable
  ansible.builtin.file:
    path: /usr/local/bin/kubectl
    owner: root
    group: root
    mode: '0755'
  become: yes

#- name: Add the HashiCorp GPG key
#  ansible.builtin.shell:
#    cmd: 
#      - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
#  become: yes

#- name: Add the HashiCorp repo
#  ansible.builtin.shell:
#    cmd: 
#      - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
#  become: yes
#
#- name: install the Terraform CLI.
#  apt:
#    name: terraform
#    update_cache: yes
#  become: yes

- name: Install helm 3
  ansible.builtin.shell:
    cmd: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash 

- name: download velero
  ansible.builtin.get_url:
    url: https://github.com/vmware-tanzu/velero/releases/download/v1.7.1/velero-v1.7.1-linux-amd64.tar.gz
    dest: /tmp/velero-v1.7.1-linux-amd64.tar.gz

- name: Extract /tmp/velero-v1.7.1-linux-amd64.tar.gz
  ansible.builtin.unarchive:
    src: /tmp/velero-v1.7.1-linux-amd64.tar.gz
    dest: /tmp

- name: Copy velero binary
  ansible.builtin.copy:
    src: /tmp/velero-v1.7.1-linux-amd64/velero
    dest: /usr/local/bin/velero
    mode: '0555'
  become: yes

- name: download golang (don't installed new version of Go on top a previous one. rm -rvf /usr/local/go/)
  ansible.builtin.get_url:
    url: https://go.dev/dl/go1.17.6.linux-amd64.tar.gz
    dest: /usr/local/go1.17.6.linux-amd64.tar.gz
  become: yes

- name: Extract go1.17.6.linux-amd64.tar.gz
  ansible.builtin.unarchive:
    src: /usr/local/go1.17.6.linux-amd64.tar.gz
    dest: /usr/local
  become: yes

- name: download protoc (API for protocol buffers using modern Haskell language and library patterns.)
  ansible.builtin.get_url:
    url: https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/protoc-3.14.0-linux-x86_64.zip
    dest: /usr/local/protoc-3.14.0-linux-x86_64.zip
  become: yes

- name: Extract protoc-3.14.0-linux-x86_64.zip
  ansible.builtin.unarchive:
    src: /usr/local/protoc-3.14.0-linux-x86_64.zip
    dest: /usr/local
  become: yes
  
- name: get and install argocd cli 
  ansible.builtin.get_url:
    url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    dest: /usr/local/bin/argocd
    mode: '0555'
  become: yes

- name: get argo cli 
  ansible.builtin.get_url:
    url: https://github.com/argoproj/argo-workflows/releases/download/v3.2.6/argo-linux-amd64.gz
    dest: /tmp

- name: Extract argo-linux-amd64.gz
  ansible.builtin.shell:
    cmd: ls /tmp/argo-linux-amd64 || gunzip argo-linux-amd64.gz
    chdir: /tmp

- name: Copy argo cli binary
  ansible.builtin.copy:
    src: /tmp/argo-linux-amd64
    dest: /usr/local/bin/argo
    mode: '0555'
  become: yes

- name: Install nvm (Node Version Manager)
  ansible.builtin.shell:
    cmd: ls ~/.nvm || curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash 

- name: Setup nvm env
  ansible.builtin.shell:
    cmd: cat /home/tino/.nvm/nvm.sh | bash  # This loads nvm 
  become: yes

- name: Install Slack chat client
  snap:
    name: slack
    classic: yes
  become: yes

- name: download fzf command-line fuzzy finder
  ansible.builtin.git:
    repo: 'https://github.com/junegunn/fzf.git'
    dest: ~/.fzf
    update: yes

- name: install fzf
  ansible.builtin.shell:
    cmd: ~/.fzf/install
#  become: yes

- name: copy cht.sh to /usr/local/bin/
  ansible.builtin.copy:
    src: cht.sh
    dest: /usr/local/bin/cht.sh
    mode: '777'
  become: yes

- name: copy spell.sh to /usr/local/bin/
  ansible.builtin.copy:
    src: spell.sh
    dest: /usr/local/bin/spell.sh
    mode: '777'
  become: yes

- name: copy sync-zsh-history to /usr/local/bin/
  ansible.builtin.copy:
    src: sync-zsh-history/index.js
    dest: /usr/local/bin/sync-zsh-history.js
    mode: '777'
  become: yes
